// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace SimplyBooksBE.Migrations
{
    [DbContext(typeof(SimplyBooksBEDbContext))]
    [Migration("20250405175537_TweakedBooks")]
    partial class TweakedBooks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SimplyBooksBE.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Favorite")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "dinnerdoggy@gmail.com",
                            Favorite = true,
                            FirstName = "Casey",
                            Image = "https://avatars.githubusercontent.com/u/31261276?v=4",
                            LastName = "Cunningham",
                            Uid = "oQWpgCUQhWfVTf3fVK6G5XdG7Z73"
                        },
                        new
                        {
                            Id = 2,
                            Email = "email@email.com",
                            Favorite = false,
                            FirstName = "John",
                            Image = "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/John_Doe%2C_born_John_Nommensen_Duchac.jpg/1200px-John_Doe%2C_born_John_Nommensen_Duchac.jpg",
                            LastName = "Doe",
                            Uid = "oQWpgCUQhWfVTf3fVK6G5XdG7Z73"
                        });
                });

            modelBuilder.Entity("SimplyBooksBE.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<bool>("Sale")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Description = "The Best Book Ever",
                            Image = "https://media.canva.com/v2/files/uri:ifs%3A%2F%2FM%2F9e5ef14c-b183-4307-a6e1-c0fdf559d5b6?csig=AAAAAAAAAAAAAAAAAAAAABYvq5u88tkGEvkQadcue_6AdY_e7KxdVct1etJC4glY&exp=1743750464&signer=media-rpc&token=AAIAAU0AJDllNWVmMTRjLWIxODMtNDMwNy1hNmUxLWMwZmRmNTU5ZDViNgAAAAABlf-gggDo8EPWDxB_7R8vCdmFIhCgucvH9pcq6GuRg0Kh6Eohvg",
                            Price = 49.99m,
                            Sale = false,
                            Title = "Casey's Best Book",
                            Uid = "oQWpgCUQhWfVTf3fVK6G5XdG7Z73"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Description = "It's just an okay book",
                            Image = "https://media.canva.com/v2/files/uri:ifs%3A%2F%2FM%2F9e5ef14c-b183-4307-a6e1-c0fdf559d5b6?csig=AAAAAAAAAAAAAAAAAAAAABYvq5u88tkGEvkQadcue_6AdY_e7KxdVct1etJC4glY&exp=1743750464&signer=media-rpc&token=AAIAAU0AJDllNWVmMTRjLWIxODMtNDMwNy1hNmUxLWMwZmRmNTU5ZDViNgAAAAABlf-gggDo8EPWDxB_7R8vCdmFIhCgucvH9pcq6GuRg0Kh6Eohvg",
                            Price = 99.99m,
                            Sale = false,
                            Title = "John's Best Book",
                            Uid = "oQWpgCUQhWfVTf3fVK6G5XdG7Z73"
                        });
                });

            modelBuilder.Entity("SimplyBooksBE.Models.Book", b =>
                {
                    b.HasOne("SimplyBooksBE.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("SimplyBooksBE.Models.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
